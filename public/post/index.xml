<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Welcome to My Blog</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on Welcome to My Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Apr 2025 10:09:47 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深度解析：官方 Go 语言工具链中的 MCP（Model Context Protocol）实现</title>
      <link>http://localhost:1313/post/go-mcp/</link>
      <pubDate>Fri, 25 Apr 2025 10:09:47 +0800</pubDate>
      <guid>http://localhost:1313/post/go-mcp/</guid>
      <description>&lt;h2 id=&#34;什么是-mcp&#34;&gt;什么是 MCP？&lt;/h2&gt;&#xA;&lt;p&gt;MCP（Model Context Protocol）是一个用于编写模型上下文协议客户端和服务器的 SDK。&lt;/p&gt;&#xA;&lt;p&gt;今天想和大家分享一个有趣的发现 —— 官方 Go 语言工具链中的 MCP（Model Context Protocol）实现。这是一个正在开发中的原型系统，旨在探索客户端/服务器生命周期和绑定的设计空间。&lt;/p&gt;&#xA;&lt;h2 id=&#34;核心特性&#34;&gt;核心特性&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;客户端/服务器架构&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提供了 &lt;code&gt;NewClient&lt;/code&gt; 和 &lt;code&gt;NewServer&lt;/code&gt; 接口用于创建 MCP 客户端或服务器&lt;/li&gt;&#xA;&lt;li&gt;支持通过 &lt;code&gt;Transport&lt;/code&gt; 实例连接对等端&lt;/li&gt;&#xA;&lt;li&gt;灵活的特性扩展机制，可以通过 &lt;code&gt;Add&amp;lt;feature&amp;gt;&lt;/code&gt; 方法添加新功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;工具系统&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;实现了一个强大的工具定义和处理系统&lt;/li&gt;&#xA;&lt;li&gt;支持通过泛型优雅地定义新工具&lt;/li&gt;&#xA;&lt;li&gt;内置 JSON Schema 支持，用于请求验证&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;传输层抽象&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;支持多种传输协议&lt;/li&gt;&#xA;&lt;li&gt;包含 SSE（Server-Sent Events）实现&lt;/li&gt;&#xA;&lt;li&gt;计划支持 Streamable HTTP 传输&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;技术亮点&#34;&gt;技术亮点&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-优雅的工具定义&#34;&gt;1. 优雅的工具定义&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MakeTool&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;TReq&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;description&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ClientConnection&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;TReq&lt;/span&gt;) ([]&lt;span style=&#34;color:#a6e22e&#34;&gt;Content&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Tool&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-json-schema-集成&#34;&gt;2. JSON Schema 集成&lt;/h3&gt;&#xA;&lt;p&gt;包中集成了 JSON Schema 支持，可以：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自动从 Go 类型生成 Schema&lt;/li&gt;&#xA;&lt;li&gt;进行请求验证&lt;/li&gt;&#xA;&lt;li&gt;支持客户端和服务器端验证（规划中）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;未来规划&#34;&gt;未来规划&lt;/h2&gt;&#xA;&lt;p&gt;从代码中的 TODO 注释可以看出，还有一些特性正在规划中：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;分页支持&lt;/li&gt;&#xA;&lt;li&gt;完整的客户端/服务器操作支持&lt;/li&gt;&#xA;&lt;li&gt;Streamable HTTP 传输&lt;/li&gt;&#xA;&lt;li&gt;多版本协议规范支持&lt;/li&gt;&#xA;&lt;li&gt;完善的 JSON Schema 支持&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;&#xA;&lt;p&gt;MCP 包虽然还处于原型阶段，但已经展现出了优秀的设计理念和实现方案。它的模块化设计、类型安全的接口以及可扩展的架构，都让它成为一个值得关注的项目。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MCP（Model Context Protocol）</title>
      <link>http://localhost:1313/post/2025-04-03-mcp/</link>
      <pubDate>Thu, 03 Apr 2025 22:21:53 +0800</pubDate>
      <guid>http://localhost:1313/post/2025-04-03-mcp/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#mcp%E7%AE%80%E4%BB%8B&#34;&gt;MCP简介&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#mcp%E7%9A%84%E6%A0%B8%E5%BF%83%E7%89%B9%E7%82%B9&#34;&gt;MCP的核心特点&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#mcp%E5%AE%9E%E6%88%98%E7%A4%BA%E4%BE%8B&#34;&gt;MCP实战示例&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#1-%E7%83%AD%E7%82%B9%E6%96%B0%E9%97%BB%E8%81%9A%E5%90%88&#34;&gt;1. 热点新闻聚合&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#2-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C&#34;&gt;2. 文件操作&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#3-%E4%BB%A3%E7%A0%81%E6%90%9C%E7%B4%A2&#34;&gt;3. 代码搜索&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5&#34;&gt;最佳实践&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#%E6%80%BB%E7%BB%93&#34;&gt;总结&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mcp简介&#34;&gt;MCP简介&lt;/h2&gt;&#xA;&lt;p&gt;MCP（Model Context Protocol）是一种标准化的协议框架，用于促进AI模型与外部系统的高效交互。通过MCP，AI模型可以以结构化的方式调用外部服务，扩展其能力边界并提高智能应用的灵活性和响应速度。&lt;/p&gt;&#xA;&lt;h2 id=&#34;mcp的核心特点&#34;&gt;MCP的核心特点&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;标准化接口&lt;/strong&gt;&lt;br&gt;&#xA;MCP提供了统一的函数调用格式，使得不同系统、服务的接口能够以一致的方式对接，简化集成和操作流程。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;类型安全&lt;/strong&gt;&lt;br&gt;&#xA;通过引入JSONSchema等机制，确保输入参数和返回结果的类型严格匹配，有效避免因类型不匹配引发的错误。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;可扩展性&lt;/strong&gt;&lt;br&gt;&#xA;MCP框架支持动态注册和管理新的功能模块，开发者可以根据需求灵活地扩展系统功能。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;上下文感知&lt;/strong&gt;&lt;br&gt;&#xA;MCP能够有效管理和保持对话的上下文信息，支持多轮交互，使得AI模型能够在长期交互中维持一致性和连贯性。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;错误处理&lt;/strong&gt;&lt;br&gt;&#xA;MCP内建了标准化的错误处理机制，确保系统在异常情况下能够准确反馈错误信息，并方便开发者进行修复。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;mcp实战示例&#34;&gt;MCP实战示例&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-热点新闻聚合&#34;&gt;1. 热点新闻聚合&lt;/h3&gt;&#xA;&lt;p&gt;以下是通过MCP调用热点新闻API的示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# MCP函数调用示例&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_hot_news&lt;/span&gt;(sources: List[int]) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Dict:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    获取各平台热点新闻&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Args:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        sources: 新闻源ID列表&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        1 - 知乎热榜&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        2 - 36Kr热榜&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        3 - 百度热点&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        4 - B站热榜&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        5 - 微博热搜&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Returns:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        各平台热点新闻数据&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; mcp_server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hotnews&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_hot_news(sources&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sources)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;调用示例:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
